// <auto-generated />
using System;
using AppDiet.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppDiet.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231127152831_InitDiet")]
    partial class InitDiet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AksamYemegiBesin", b =>
                {
                    b.Property<int>("AksamYemekleriID")
                        .HasColumnType("int");

                    b.Property<int>("BesinlerID")
                        .HasColumnType("int");

                    b.HasKey("AksamYemekleriID", "BesinlerID");

                    b.HasIndex("BesinlerID");

                    b.ToTable("AksamYemegiBesin");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.AksamYemegi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AlinanToplamKalori")
                        .HasColumnType("int");

                    b.Property<double>("AlinanToplamKarbonhidrat")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamProtein")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamYag")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("AksamYemekleri");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.AraOgun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AlinanToplamKalori")
                        .HasColumnType("int");

                    b.Property<double>("AlinanToplamKarbonhidrat")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamProtein")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamYag")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("AraOgunler");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.Besin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kalori")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<double?>("KarbonhidratMiktari")
                        .HasMaxLength(3)
                        .HasColumnType("float");

                    b.Property<int>("Kategori")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnayliMi")
                        .HasColumnType("bit");

                    b.Property<int>("PorsiyonBirimi")
                        .HasColumnType("int");

                    b.Property<double?>("ProteinMiktari")
                        .HasMaxLength(3)
                        .HasColumnType("float");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<double?>("YagMiktari")
                        .HasMaxLength(3)
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Besinler");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Aciklama = "Yağsız tavuk göğsü.",
                            Ad = "Tavuk Göğsü",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\TavukGogsu.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 12.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8036),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 12.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 2,
                            Aciklama = "Beyaz pilav.",
                            Ad = "Pilav",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\TavukGogsu\\Pilav.jpg",
                            Kalori = 150,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8053),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 3.0,
                            YagMiktari = 1.0
                        },
                        new
                        {
                            ID = 3,
                            Aciklama = "Sulu yapılan yeşil mercimek yemeği",
                            Ad = "Yeşil Mercimek",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\YesilMercimek.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 5.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8057),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 20.0,
                            YagMiktari = 10.0
                        },
                        new
                        {
                            ID = 4,
                            Aciklama = "Izgara yağsız somon",
                            Ad = "Somon",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Somon.jpg",
                            Kalori = 80,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8061),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 5.0,
                            YagMiktari = 2.0
                        },
                        new
                        {
                            ID = 5,
                            Aciklama = "Fırında karnabahar grateni.",
                            Ad = "Karnabahar Graten",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Karnabahar.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 10.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8065),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 8.0,
                            YagMiktari = 7.0
                        },
                        new
                        {
                            ID = 6,
                            Aciklama = "Baharatlı ve nefis fırın tavuk.",
                            Ad = "Pirzola",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Pirzola.jpg",
                            Kalori = 200,
                            KarbonhidratMiktari = 0.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8069),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 25.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 7,
                            Aciklama = "Sebzelerle zenginleştirilmiş kıymalı pilav.",
                            Ad = "Sebzeli Kıymalı Pilav",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\SebzeliEtliPilav.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8074),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 10.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 8,
                            Aciklama = "Izgara köfte yanında yeşillik.",
                            Ad = "Köfte Izgara",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Kofte.jpg",
                            Kalori = 160,
                            KarbonhidratMiktari = 5.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8078),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 15.0,
                            YagMiktari = 9.0
                        },
                        new
                        {
                            ID = 9,
                            Aciklama = "Fırında pişirilmiş nefis balık tava.",
                            Ad = "Balık Tava",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\BalikTava.jpg",
                            Kalori = 150,
                            KarbonhidratMiktari = 2.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8081),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 20.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 10,
                            Aciklama = "Yavaş pişirilmiş nefis kuzu tandır.",
                            Ad = "Kuzu Tandır",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Tandir.jpg",
                            Kalori = 250,
                            KarbonhidratMiktari = 5.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8185),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 30.0,
                            YagMiktari = 15.0
                        },
                        new
                        {
                            ID = 11,
                            Aciklama = "Patlıcan ile yapılan etli bir yemek",
                            Ad = "Kıymalı Musakka",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\KiymaliMusakka.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 0.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8189),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 25.0,
                            YagMiktari = 10.0
                        },
                        new
                        {
                            ID = 12,
                            Aciklama = "Et ve bulgurun muhteşem uyumu.",
                            Ad = "Etli Bulgur Pilavı",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\EtliBulgur.jpg",
                            Kalori = 220,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8191),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 15.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 13,
                            Aciklama = "Tavuk ve taze sebzelerle hazırlanan nefis güveç.",
                            Ad = "Sebzeli Tavuk Güveç",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\GuvecteTavuk.jpg",
                            Kalori = 200,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8193),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 20.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 14,
                            Aciklama = "Geleneksel zeytinyağlı yaprak sarması.",
                            Ad = "Zeytinyağlı Yaprak Sarma",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\ZeytinyagliSarma.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8195),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 2.0,
                            YagMiktari = 6.0
                        },
                        new
                        {
                            ID = 15,
                            Aciklama = "Hafif ve nefis karnabahar kızartması.",
                            Ad = "Karnabahar Kızartması",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\KarnabaharKizartma.jpg",
                            Kalori = 150,
                            KarbonhidratMiktari = 10.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8197),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 5.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 16,
                            Aciklama = "Taze ve lezzetli bir elma.",
                            Ad = "Elma",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Elma.jpg",
                            Kalori = 50,
                            KarbonhidratMiktari = 12.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8199),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 1.0,
                            YagMiktari = 0.0
                        },
                        new
                        {
                            ID = 17,
                            Aciklama = "Yogurt soslu taze salatalık dilimleri.",
                            Ad = "Yogurtlu Salatalık",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\YogurtluSalatalik.jpg",
                            Kalori = 30,
                            KarbonhidratMiktari = 5.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8201),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 2.0,
                            YagMiktari = 1.0
                        },
                        new
                        {
                            ID = 18,
                            Aciklama = "Sağlıklı badem atıştırmalığı.",
                            Ad = "Badem",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Badem.jpg",
                            Kalori = 100,
                            KarbonhidratMiktari = 3.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8202),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 4.0,
                            YagMiktari = 9.0
                        },
                        new
                        {
                            ID = 19,
                            Aciklama = "Meyve olarak tüketilebilecek muz.",
                            Ad = "Muz",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Muz.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8204),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 1.0,
                            YagMiktari = 0.0
                        },
                        new
                        {
                            ID = 20,
                            Aciklama = "Süt veya yoğurt ile tüketilebilecek yulaf ezmesi.",
                            Ad = "Yulaf Ezmesi",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\YulafEzmesi.jpg",
                            Kalori = 150,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8207),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 5.0,
                            YagMiktari = 2.0
                        },
                        new
                        {
                            ID = 21,
                            Aciklama = "Hindi dilimleri ve havuç dilimleri.",
                            Ad = "Hindi Dilimleri ve Havuç",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\HindiDilimiHavuc.jpg",
                            Kalori = 80,
                            KarbonhidratMiktari = 5.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8208),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 15.0,
                            YagMiktari = 2.0
                        },
                        new
                        {
                            ID = 22,
                            Aciklama = "Yumurta, ıspanak, biber ve domates içeren hafif bir omlet.",
                            Ad = "Sebzeli Omlet",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\sebzeliomlet",
                            Kalori = 140,
                            KarbonhidratMiktari = 2.5,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8224),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 10.6,
                            YagMiktari = 9.5
                        },
                        new
                        {
                            ID = 23,
                            Aciklama = "Çeşitli taze meyvelerden oluşan hafif bir meyve salatası.",
                            Ad = "Taze Meyve Salatası",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\tazemeyvesalatasi",
                            Kalori = 43,
                            KarbonhidratMiktari = 11.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8227),
                            OnayliMi = true,
                            PorsiyonBirimi = 4,
                            ProteinMiktari = 0.5,
                            YagMiktari = 0.29999999999999999
                        },
                        new
                        {
                            ID = 24,
                            Aciklama = "Yoğurt ile karıştırılmış müsli, ceviz ve bal ile zenginleştirilmiş bir kahvaltı seçeneği.",
                            Ad = "Yoğurtlu Müsli",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\yogurtlumusli",
                            Kalori = 250,
                            KarbonhidratMiktari = 37.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8228),
                            OnayliMi = true,
                            PorsiyonBirimi = 4,
                            ProteinMiktari = 8.5,
                            YagMiktari = 7.0
                        },
                        new
                        {
                            ID = 25,
                            Aciklama = "Mısır gevreği süt ile servis edilen hafif ve pratik bir kahvaltı seçeneği.",
                            Ad = "Mısır Gevreği ve Süt",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\misirgevregivesut",
                            Kalori = 150,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8230),
                            OnayliMi = true,
                            PorsiyonBirimi = 4,
                            ProteinMiktari = 5.0,
                            YagMiktari = 1.0
                        },
                        new
                        {
                            ID = 26,
                            Aciklama = "Beyaz peynir, domates ve salatalık dilimleri ile hazırlanan nefis bir kahvaltılık tost.",
                            Ad = "Tost",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\tost",
                            Kalori = 200,
                            KarbonhidratMiktari = 25.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8231),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 8.0,
                            YagMiktari = 9.0
                        },
                        new
                        {
                            ID = 27,
                            Aciklama = "Yulaf, kuruyemiş ve bal içeren enerji dolu granola bar.",
                            Ad = "Granola Bar",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\granolabar",
                            Kalori = 180,
                            KarbonhidratMiktari = 22.0,
                            Kategori = 8,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8233),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 4.0,
                            YagMiktari = 9.0
                        },
                        new
                        {
                            ID = 28,
                            Aciklama = "Taze beyaz peynir ve zeytinlerden oluşan geleneksel bir Türk kahvaltısı.",
                            Ad = "Beyaz Peynir ve Zeytin",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\beyazpeynirvezeytin",
                            Kalori = 220,
                            KarbonhidratMiktari = 2.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8235),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 10.0,
                            YagMiktari = 18.0
                        },
                        new
                        {
                            ID = 29,
                            Aciklama = "Somon dilimleri, krem peynir ve taze yeşilliklerle doldurulmuş lezzetli bir bagel.",
                            Ad = "Somonlu Bagel",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\somonlubagel",
                            Kalori = 250,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8237),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 12.0,
                            YagMiktari = 10.0
                        },
                        new
                        {
                            ID = 30,
                            Aciklama = "Haşlanmış yumurta dilimleri ve marullarla hazırlanan pratik bir sandviç.",
                            Ad = "Yumurtalı Sandviç",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\yumurtalisandvic",
                            Kalori = 180,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8239),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 12.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 31,
                            Aciklama = "Protein tozu, süt ve meyve içeren besleyici bir protein shake.",
                            Ad = "Proteinli Shake",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\proteinlishake",
                            Kalori = 180,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 6,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8240),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 20.0,
                            YagMiktari = 5.0
                        },
                        new
                        {
                            ID = 32,
                            Aciklama = "Ton balığı, marullar ve mayonez ile hazırlanan sağlıklı bir kahvaltı sandviçi.",
                            Ad = "Ton Balıklı Sandviç",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\tonbaliklisandvic",
                            Kalori = 250,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8242),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 15.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 33,
                            Aciklama = "Yulaf unu, protein tozu ve doğranmış muz içeren yüksek proteinli pancake.",
                            Ad = "Muzlu Proteinli Pancake",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\muzluproteinlipancake",
                            Kalori = 280,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 8,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8243),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 20.0,
                            YagMiktari = 10.0
                        },
                        new
                        {
                            ID = 34,
                            Aciklama = "Yumurta, domates ve beyaz peynir içeren nefis bir omlet.",
                            Ad = "Domates ve Peynirli Omlet",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\domatesvepeynirliomlet",
                            Kalori = 180,
                            KarbonhidratMiktari = 4.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8245),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 12.0,
                            YagMiktari = 14.0
                        },
                        new
                        {
                            ID = 35,
                            Aciklama = "Sarımsaklı peynir ve taze yeşilliklerle doldurulmuş hafif bir baget.",
                            Ad = "Sarımsaklı Peynirli Baget",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\sarimsaklipeynirlibaget",
                            Kalori = 220,
                            KarbonhidratMiktari = 28.0,
                            Kategori = 9,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8246),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 10.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 36,
                            Aciklama = "Sağlıklı yağlar ve doğal şeker içeren enerji dolu bir ara öğün.",
                            Ad = "Badem ve Kuru Üzüm Karışımı",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\bademvekuruuzumkarisimi",
                            Kalori = 180,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8248),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 5.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 37,
                            Aciklama = "Taze meyvelerle süslenmiş yoğurtlu hafif bir ara öğün seçeneği.",
                            Ad = "Yoğurtlu Meyve Parçacıkları",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\yogurtlumeyveparcaciklari",
                            Kalori = 120,
                            KarbonhidratMiktari = 25.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8250),
                            OnayliMi = true,
                            PorsiyonBirimi = 4,
                            ProteinMiktari = 3.0,
                            YagMiktari = 1.0
                        },
                        new
                        {
                            ID = 38,
                            Aciklama = "Havuç dilimleri ile lezzetli humus, vitamin ve protein içeren bir ara öğün alternatifi.",
                            Ad = "Havuç ve Humus",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\havucvehumus",
                            Kalori = 150,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8252),
                            OnayliMi = true,
                            PorsiyonBirimi = 4,
                            ProteinMiktari = 5.0,
                            YagMiktari = 7.0
                        },
                        new
                        {
                            ID = 39,
                            Aciklama = "Ceviz ve kuru incir karışımı, lif ve sağlıklı yağlar içeren doyurucu bir ara öğün.",
                            Ad = "Ceviz ve Kuru İncir",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\cevizvekuruincir",
                            Kalori = 200,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8254),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 5.0,
                            YagMiktari = 15.0
                        },
                        new
                        {
                            ID = 40,
                            Aciklama = "Taze mandalina dilimleri, C vitamini kaynağı olan hafif bir ara öğün seçeneği.",
                            Ad = "Mandalina Dilimleri",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\mandalinadilimleri",
                            Kalori = 50,
                            KarbonhidratMiktari = 12.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8256),
                            OnayliMi = true,
                            PorsiyonBirimi = 5,
                            ProteinMiktari = 1.0,
                            YagMiktari = 0.5
                        },
                        new
                        {
                            ID = 41,
                            Aciklama = "Izgara tavuk yanında sebzeler.",
                            Ad = "Tavuk Izgara",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\IzgaraTavuk.jpg",
                            Kalori = 165,
                            KarbonhidratMiktari = 0.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8258),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 31.0,
                            YagMiktari = 3.6000000000000001
                        },
                        new
                        {
                            ID = 42,
                            Aciklama = "Izgara balık yanında ızgara sebzeler.",
                            Ad = "Balık Izgara",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\BalikIzgara.jpg",
                            Kalori = 136,
                            KarbonhidratMiktari = 0.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8260),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 25.0,
                            YagMiktari = 3.3999999999999999
                        },
                        new
                        {
                            ID = 43,
                            Aciklama = "Kıymalı ıspanak yemeği yanında pilav.",
                            Ad = "Kıyma Ispanak",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\KiymaIspanak.jpg",
                            Kalori = 190,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8262),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 10.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 44,
                            Aciklama = "Ceviz ve kuru kayısı karışımı.",
                            Ad = "Ceviz ve Kuru Kayısı Karışımı",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\CevizKuruKayisi.jpg",
                            Kalori = 140,
                            KarbonhidratMiktari = 10.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8263),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 4.0,
                            YagMiktari = 11.0
                        },
                        new
                        {
                            ID = 45,
                            Aciklama = "Sebzeli tavuk sote yanında bulgur pilavı.",
                            Ad = "Sebzeli Tavuk Sote",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\SebzeliTavukSote.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8265),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 25.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 46,
                            Aciklama = "Mercimek köftesi yanında marullarla servis edilir.",
                            Ad = "Mercimek Köftesi",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\MercimekKoftesi.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 25.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8267),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 7.0,
                            YagMiktari = 1.0
                        },
                        new
                        {
                            ID = 47,
                            Aciklama = "Kinoa salatası yanında avokado dilimleri.",
                            Ad = "Kinoa Salatası",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\KinoaSalatasi.jpg",
                            Kalori = 200,
                            KarbonhidratMiktari = 25.0,
                            Kategori = 2,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8269),
                            OnayliMi = true,
                            PorsiyonBirimi = 1,
                            ProteinMiktari = 10.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 48,
                            Aciklama = "Mantarlı tavuk yanında bulgur pilavı.",
                            Ad = "Mantarlı Tavuk",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\MantarliTavuk.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8271),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 22.0,
                            YagMiktari = 9.0
                        },
                        new
                        {
                            ID = 49,
                            Aciklama = "Kırmızı mercimek çorbası yanında ekmek.",
                            Ad = "Kırmızı Mercimek Çorbası",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\MercimekCorbasi.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 1,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8272),
                            OnayliMi = true,
                            PorsiyonBirimi = 4,
                            ProteinMiktari = 7.0,
                            YagMiktari = 1.0
                        },
                        new
                        {
                            ID = 50,
                            Aciklama = "Karnabahar graten yanında salata.",
                            Ad = "Karnabahar Graten",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\KarnabaharGraten.jpg",
                            Kalori = 150,
                            KarbonhidratMiktari = 12.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8274),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 8.0,
                            YagMiktari = 10.0
                        },
                        new
                        {
                            ID = 51,
                            Aciklama = "Kıymalı kabak yemeği yanında pilav.",
                            Ad = "Kıymalı Kabak Yemeği",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\KiymaliKabak.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8275),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 15.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 53,
                            Aciklama = "Fırın tavuk kanat yanında patates kızartması.",
                            Ad = "Fırın Tavuk Kanat",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\FirinTavukKanat.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 3,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8277),
                            OnayliMi = true,
                            PorsiyonBirimi = 2,
                            ProteinMiktari = 20.0,
                            YagMiktari = 10.0
                        },
                        new
                        {
                            ID = 54,
                            Aciklama = "Mevsim salatası yanında hindi dilimleri.",
                            Ad = "Mevsim Salatası",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\MevsimSalatasi.jpg",
                            Kalori = 120,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 2,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8279),
                            OnayliMi = true,
                            PorsiyonBirimi = 1,
                            ProteinMiktari = 8.0,
                            YagMiktari = 5.0
                        },
                        new
                        {
                            ID = 55,
                            Aciklama = "Kumpir yanında garnitürlerle servis edilir.",
                            Ad = "Kumpir",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\Kumpir.jpg",
                            Kalori = 250,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 10,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8280),
                            OnayliMi = true,
                            PorsiyonBirimi = 1,
                            ProteinMiktari = 10.0,
                            YagMiktari = 12.0
                        },
                        new
                        {
                            ID = 56,
                            Aciklama = "Ton balıklı salata yanında zeytinyağlı sos.",
                            Ad = "Ton Balıklı Salata",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\TonBalikliSalata.jpg",
                            Kalori = 180,
                            KarbonhidratMiktari = 15.0,
                            Kategori = 2,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8282),
                            OnayliMi = true,
                            PorsiyonBirimi = 1,
                            ProteinMiktari = 20.0,
                            YagMiktari = 8.0
                        },
                        new
                        {
                            ID = 57,
                            Aciklama = "Muz ve yulaf ezmesi içeren smoothie.",
                            Ad = "Muz ve Yulaf Ezmesi Smoothie",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\MuzYulafSmoothie.jpg",
                            Kalori = 150,
                            KarbonhidratMiktari = 30.0,
                            Kategori = 11,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8284),
                            OnayliMi = true,
                            PorsiyonBirimi = 3,
                            ProteinMiktari = 5.0,
                            YagMiktari = 2.0
                        },
                        new
                        {
                            ID = 58,
                            Aciklama = "Yoğurtlu meyve salatası.",
                            Ad = "Yoğurtlu Meyve Salatası",
                            Durum = 0,
                            Fotograf = "C:\\Users\\Harun\\Desktop\\BesinData-Resimler\\YogurluMeyveSalatasi.jpg",
                            Kalori = 100,
                            KarbonhidratMiktari = 20.0,
                            Kategori = 2,
                            OlusturulmaTarihi = new DateTime(2023, 11, 27, 18, 28, 30, 910, DateTimeKind.Local).AddTicks(8286),
                            OnayliMi = true,
                            PorsiyonBirimi = 1,
                            ProteinMiktari = 3.0,
                            YagMiktari = 1.0
                        });
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.GunlukDetay", b =>
                {
                    b.Property<int>("GunlukDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GunlukDetayId"), 1L, 1);

                    b.Property<int?>("AksamYemegiID")
                        .HasColumnType("int");

                    b.Property<int>("AlinanToplamKalori")
                        .HasColumnType("int");

                    b.Property<double>("AlinanToplamKarbonhidrat")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamProtein")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamYag")
                        .HasColumnType("float");

                    b.Property<int?>("AraOgunID")
                        .HasColumnType("int");

                    b.Property<int>("GunlukKaloriIhtiyaci")
                        .HasColumnType("int");

                    b.Property<int?>("KahvaltiID")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OgleYemegiID")
                        .HasColumnType("int");

                    b.HasKey("GunlukDetayId");

                    b.HasIndex("AksamYemegiID");

                    b.HasIndex("AraOgunID");

                    b.HasIndex("KahvaltiID");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("OgleYemegiID");

                    b.ToTable("GunlukDetaylar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.Kahvalti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AlinanToplamKalori")
                        .HasColumnType("int");

                    b.Property<double>("AlinanToplamKarbonhidrat")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamProtein")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamYag")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Kahvaltilar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AktiviteDuzeyi")
                        .HasColumnType("int");

                    b.Property<int>("Boy")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double>("HedefKilo")
                        .HasMaxLength(3)
                        .HasColumnType("float");

                    b.Property<double>("Kilo")
                        .HasMaxLength(3)
                        .HasColumnType("float");

                    b.Property<int>("KullaniciTipi")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Yas")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.OgleYemegi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AlinanToplamKalori")
                        .HasColumnType("int");

                    b.Property<double>("AlinanToplamKarbonhidrat")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamProtein")
                        .HasColumnType("float");

                    b.Property<double>("AlinanToplamYag")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("OgleYemekleri");
                });

            modelBuilder.Entity("AraOgunBesin", b =>
                {
                    b.Property<int>("AraOgunlerID")
                        .HasColumnType("int");

                    b.Property<int>("BesinlerID")
                        .HasColumnType("int");

                    b.HasKey("AraOgunlerID", "BesinlerID");

                    b.HasIndex("BesinlerID");

                    b.ToTable("AraOgunBesin");
                });

            modelBuilder.Entity("BesinKahvalti", b =>
                {
                    b.Property<int>("BesinlerID")
                        .HasColumnType("int");

                    b.Property<int>("KahvaltilarID")
                        .HasColumnType("int");

                    b.HasKey("BesinlerID", "KahvaltilarID");

                    b.HasIndex("KahvaltilarID");

                    b.ToTable("BesinKahvalti");
                });

            modelBuilder.Entity("BesinOgleYemegi", b =>
                {
                    b.Property<int>("BesinlerID")
                        .HasColumnType("int");

                    b.Property<int>("OgleYemekleriID")
                        .HasColumnType("int");

                    b.HasKey("BesinlerID", "OgleYemekleriID");

                    b.HasIndex("OgleYemekleriID");

                    b.ToTable("BesinOgleYemegi");
                });

            modelBuilder.Entity("AksamYemegiBesin", b =>
                {
                    b.HasOne("AppDiet.Domain.Entities.AksamYemegi", null)
                        .WithMany()
                        .HasForeignKey("AksamYemekleriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDiet.Domain.Entities.Besin", null)
                        .WithMany()
                        .HasForeignKey("BesinlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.GunlukDetay", b =>
                {
                    b.HasOne("AppDiet.Domain.Entities.AksamYemegi", "AksamYemegi")
                        .WithMany("GunlukDetaylar")
                        .HasForeignKey("AksamYemegiID");

                    b.HasOne("AppDiet.Domain.Entities.AraOgun", "AraOgun")
                        .WithMany("GunlukDetaylar")
                        .HasForeignKey("AraOgunID");

                    b.HasOne("AppDiet.Domain.Entities.Kahvalti", "Kahvalti")
                        .WithMany("GunlukDetaylar")
                        .HasForeignKey("KahvaltiID");

                    b.HasOne("AppDiet.Domain.Entities.Kullanici", "Kullanici")
                        .WithMany("GunlukDetaylar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDiet.Domain.Entities.OgleYemegi", "OgleYemegi")
                        .WithMany("GunlukDetaylar")
                        .HasForeignKey("OgleYemegiID");

                    b.Navigation("AksamYemegi");

                    b.Navigation("AraOgun");

                    b.Navigation("Kahvalti");

                    b.Navigation("Kullanici");

                    b.Navigation("OgleYemegi");
                });

            modelBuilder.Entity("AraOgunBesin", b =>
                {
                    b.HasOne("AppDiet.Domain.Entities.AraOgun", null)
                        .WithMany()
                        .HasForeignKey("AraOgunlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDiet.Domain.Entities.Besin", null)
                        .WithMany()
                        .HasForeignKey("BesinlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BesinKahvalti", b =>
                {
                    b.HasOne("AppDiet.Domain.Entities.Besin", null)
                        .WithMany()
                        .HasForeignKey("BesinlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDiet.Domain.Entities.Kahvalti", null)
                        .WithMany()
                        .HasForeignKey("KahvaltilarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BesinOgleYemegi", b =>
                {
                    b.HasOne("AppDiet.Domain.Entities.Besin", null)
                        .WithMany()
                        .HasForeignKey("BesinlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDiet.Domain.Entities.OgleYemegi", null)
                        .WithMany()
                        .HasForeignKey("OgleYemekleriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.AksamYemegi", b =>
                {
                    b.Navigation("GunlukDetaylar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.AraOgun", b =>
                {
                    b.Navigation("GunlukDetaylar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.Kahvalti", b =>
                {
                    b.Navigation("GunlukDetaylar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.Kullanici", b =>
                {
                    b.Navigation("GunlukDetaylar");
                });

            modelBuilder.Entity("AppDiet.Domain.Entities.OgleYemegi", b =>
                {
                    b.Navigation("GunlukDetaylar");
                });
#pragma warning restore 612, 618
        }
    }
}
